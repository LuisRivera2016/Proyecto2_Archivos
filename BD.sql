------------------------------------------------------------------------------------------MODELO
--DEPARTAMENTO
CREATE TABLE Departamento(
   id_Departamento INTEGER,
   Nombre VARCHAR2(100),
   Capital NUMBER(10,2),
   DepartamentoP VARCHAR2(100),
   CONSTRAINT id_departamento_pk PRIMARY KEY(id_Departamento)
);

--TIPO
CREATE TABLE Tipo(
   id_Tipo INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Rol VARCHAR2(100),
   CONSTRAINT id_tipo_pk PRIMARY KEY(id_Tipo)
);

--PUESTO
CREATE TABLE Puesto(
   id_Puesto INTEGER,
   Nombre VARCHAR2(100),
   Salario NUMBER(10,2),
   Calificacion NUMBER(1),
   Disponible NUMBER(1),
   id_Departamento INTEGER,
   CONSTRAINT puesto_pk PRIMARY KEY(id_Puesto),
   CONSTRAINT departamento_fk FOREIGN KEY(id_Departamento) REFERENCES Departamento(id_Departamento)
);

--CATEGORIA
CREATE TABLE Categoria(
   id_Categoria INTEGER,
   Nombre VARCHAR2(100),
   CONSTRAINT categoria_pk PRIMARY KEY(id_Categoria)
);

--PUESTO_CATEGORIA
CREATE TABLE Puesto_Categoria(
   id_Puesto_Categoria INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   id_Puesto INTEGER,
   id_Categoria INTEGER,
   CONSTRAINT puesto_categoria_pk PRIMARY KEY(id_Puesto_Categoria),
   CONSTRAINT puesto_fk FOREIGN KEY(id_Puesto) REFERENCES Puesto(id_Puesto),
   CONSTRAINT categoria_fk FOREIGN KEY(id_Categoria) REFERENCES Categoria(id_Categoria)
);

--REQUISITO
CREATE TABLE Requisito(
   id_Requisito INTEGER,
   Nombre VARCHAR2(100),
   Tamano NUMBER(10),
   Obligatorio NUMBER(1),
   CONSTRAINT requisito_pk PRIMARY KEY(id_Requisito)
);

--PUESTO_REQUISITO
CREATE TABLE Puesto_Requisito(
   id_Puesto_Requisito INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   id_Puesto INTEGER,
   id_Requisito INTEGER,
   CONSTRAINT puesto_requisito_pk PRIMARY KEY(id_Puesto_Requisito),
   CONSTRAINT puestoR_fk FOREIGN KEY(id_Puesto) REFERENCES Puesto(id_Puesto),
   CONSTRAINT requisitoP_fk FOREIGN KEY(id_Requisito) REFERENCES Requisito(id_Requisito)
);

--FORMATO
CREATE TABLE Formato(
   id_Formato INTEGER,
   Nombre VARCHAR2(100),
   CONSTRAINT formato_pk PRIMARY KEY(id_Formato)
);

--REQUISITO_FORMATO
CREATE TABLE Requisito_Formato(
   id_Requisito_Formato INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   id_Requisito INTEGER,
   id_Formato INTEGER,
   CONSTRAINT requisito_formato_pk PRIMARY KEY(id_Requisito_Formato),
   CONSTRAINT requisitoF_fk FOREIGN KEY(id_Requisito) REFERENCES Requisito(id_Requisito),
   CONSTRAINT formatoF_fk FOREIGN KEY(id_Formato) REFERENCES Formato(id_Formato)
);

--APLICANTE
CREATE TABLE Aplicante(
   id_Aplicante INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Estado NUMBER(1),
   DPI NUMBER(13),
   Nombre VARCHAR2(100),
   Apellido VARCHAR2(100),
   Correo VARCHAR2(100),
   Direccion VARCHAR2(100),
   Telefono NUMBER(10),
   Entrada NUMBER(1),
   CV LONG RAW,
   id_Puesto INTEGER,
   CONSTRAINT aplicante_pk PRIMARY KEY(id_Aplicante),
   CONSTRAINT puestoA_fk FOREIGN KEY(id_Puesto) REFERENCES Puesto(id_Puesto)
);

--USUARIO
CREATE TABLE Usuario(
   id_Usuario INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Nombre VARCHAR2(100),
   Password VARCHAR2(100),
   Fecha_Creacion DATE,
   Fecha_Fin DATE,
   Estado NUMBER(1),
   id_Tipo INTEGER,
   id_Puesto INTEGER,
   CONSTRAINT usuario_pk PRIMARY KEY(id_Usuario),
   CONSTRAINT tipoU_fk FOREIGN KEY(id_Tipo) REFERENCES Tipo(id_Tipo),
   CONSTRAINT puestoU_fk FOREIGN KEY(id_Puesto) REFERENCES Puesto(id_Puesto)
);

--CHAT
CREATE TABLE Chat(
   id_Chat INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   id_Usuario1 INTEGER,
   id_Usuario2 INTEGER,
   CONSTRAINT chat_pk PRIMARY KEY(id_Chat),
   CONSTRAINT usuarioC_fk FOREIGN KEY(id_Usuario1) REFERENCES Usuario(id_Usuario),
   CONSTRAINT usuarioC2_fk FOREIGN KEY(id_Usuario2) REFERENCES Usuario(id_Usuario)
);

--MENSAJE
CREATE TABLE Mensaje(
   id_Mensaje INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Contenido VARCHAR2(255),
   Fecha DATE,
   id_Chat INTEGER,
   CONSTRAINT mensaje_pk PRIMARY KEY(id_Mensaje),
   CONSTRAINT chat_fk FOREIGN KEY(id_Chat) REFERENCES Chat(id_Chat)
);

--REVISION
CREATE TABLE Revision(
   id_Revision INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Estado_Revision NUMBER(1),
   id_Usuario INTEGER,
   id_Aplicante INTEGER,
   CONSTRAINT revision_pk PRIMARY KEY(id_Revision),
   CONSTRAINT usuarioR_fk FOREIGN KEY(id_Usuario) REFERENCES Usuario(id_Usuario),
   CONSTRAINT aplicanteR_fk FOREIGN KEY(id_Aplicante) REFERENCES Aplicante(id_Aplicante)
);


--REVISION_REQUISITO
CREATE TABLE Revision_Requisito(
   id_Revision_Requisito INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Nombre VARCHAR2(100),
   Estado NUMBER(1),
   Motivo VARCHAR2(100),
   Fecha_Rechazo DATE,
   id_Revision INTEGER,
   id_Puesto_Requisito INTEGER,
   CONSTRAINT revion_requisito_pk PRIMARY KEY(id_Revision_Requisito),
   CONSTRAINT revisionR_fk FOREIGN KEY(id_Revision) REFERENCES Revision(id_Revision),
   CONSTRAINT puestoRR_fk FOREIGN KEY(id_Puesto_Requisito) REFERENCES Puesto_Requisito(id_Puesto_Requisito)
);



--PRUEBA
CREATE TABLE Prueba(
   id_Prueba INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
   Nombre VARCHAR2(100),
   Estado NUMBER(1),
   Telefono NUMBER(10),
   CONSTRAINT prueba_pk PRIMARY KEY(id_Prueba)
);
DROP TABLE PRUEBA
--ADMIN
INSERT INTO Tipo(Rol) VALUES('Administrador');
INSERT INTO Tipo(Rol) VALUES('Coordinador');
INSERT INTO Tipo(Rol) VALUES('Revisor');
INSERT INTO Tipo(Rol) VALUES('Reclutador');

SELECT * FROM Tipo;
DELETE FROM Tipo;
INSERT INTO Usuario(Nombre,Password,Fecha_Creacion,Fecha_Fin,Estado,Id_Tipo,Id_Puesto)

SELECT * FROM Departamento;
DELETE FROM Departamento;